name: Build Eleventy on Github

on:
  push:
    branches:
      - v8

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [23.x]
    steps:
      - name: Restore git cache
        uses: actions/cache@v3
        with:
          path: .git
          key: git-cache-${{ runner.os }}-${{ github.sha }}
          restore-keys: |
            git-cache-${{ runner.os }}-
            
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 #  Necessary for using existing .git directory
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies & build
        run: |
          npm ci
          npm run build
#      - name: Deploy
#        uses: peaceiris/actions-gh-pages@v3
#        with:
#          publish_dir: ./_site
#          github_token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/upload-artifact@v4
        with:
          name: static-site
          path: ./_site/
  deploy:
    needs: build
    runs-on: ubuntu-latest
    container:
      image: sstc/rsync
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: static-site
      - name: Deploy with ssh/rsync
        # the rsync workflow is errror prone and broken so we will
        # call docker manually.
        #env:
        #  USER: ${{secrets.DEPLOY_SSH_USER}}
        #  HOST: ${{secrets.DEPLOY_SSH_HOST}}
        #  KEY: ${{secrets.DEPLOY_SSH_KEY}}
        #  SOURCE: ./_site/
        #  TARGET: ${{secrets.DEPLOY_SSH_REMOTE_PATH}}
        #  PRE_SCRIPT: |
        #    echo '${{secrets.DEPLOY_SSH_KNOWN_HOST}}' > known_host
        #    chmod 600 known_host
        #    echo startet at: $(date -u)
        #  # TODO: This won't work. However, it is way more secure with
        #  #       strict host key checking to avoid MITM
        #  #SSH_ARGS: "-p 22 -o UserKnownHostsFile=known_host -o StrictHostKeyChecking=yes"
        #  POST_SCRIPT: |
        #    echo done at $(date -u)
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEPLOY_SSH_KEY }}" > ~/.ssh/id_rsa
          echo "${{ secrets.DEPLOY_SSH_KNOWN_HOST }}" > ~/.ssh/known_hosts
          chmod 0700 ~/.ssh && chmod 600 ~/.ssh/* 
          id && stat ~/.ssh && ls -l ~/.ssh
          rsync -avz -e "ssh -v" ./_site/ ${{secrets.DEPLOY_SSH_USER}}@${{secrets.DEPLOY_SSH_HOST}}:${{secrets.DEPLOY_SSH_REMOTE_PATH}} \
