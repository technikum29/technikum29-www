<html>
<head>
   <title>technikum29 Privatbereich -- Projekte-Administration</title>
   <style>
     /* naja, Design will ich das nicht nennen ;) */
     body { margin: 2em; background-color: #eee; font-family: Arial; font-size: 16px; }
     table td, table th { padding: 10px; }
     table th { font-weight: bold; background-color: #aaa; }
     a:hover { background-color: yellow; }
     pre, label, div.label { display:block; padding: 10px; border: 1px solid #aaa; background-color: #fff; }
     /* allgemeine hervorhebung */
     em, h2 i { background-color: yellow; }
  </style>
  <link rel="stylesheet" type="text/css" href="/src/private.design/style.css">
</head>
 <body>
<h1><a href="/projekte"><span>technikum29: </span></a><strong>Projekte</strong></h1>

<h2>Adminstation der <a href="/projekte">Projekte</a></h2>
<?php
 /**
  * Konfigurations-GUI zur Verwaltung des Projekte-Passwortschutzes.
  * Diese GUI erledigt die .htaccess-Dateien pro Verzeichnis sowie
  * die Erstellung der Passwörter, in dem es auf das externe Programm
  * `$htpasswd` zugreift.
  *
  *
  **/

  ///// Konfigurationsvariablen //////

  // Pfad zu htpasswd2
  $htpasswd = '/usr/bin/htpasswd';

  // die zu bearbeitende .htpasswd-File, Schreib+Lesezugriff nötig
  $passwd_file = '/etc/apache2/passwords/lernprojekte.passwd';

  // das Verzeichnis, in dem sich die Projekt-Ordner befinden,
  // inklusive trailing slash, relativ zum PHP-Script
  $projekte_dir = '../';

  // Verzeichnisse, die bei der Auflistung des Projekt-Ordners
  // nicht angezeigt werden sollen. Angegeben wird ein Regex zur Übergabe
  // an preg_match. Üblicherweise ., .. und Administrationsverzeichnisse
  $exclude_dirs = "/(^\.\.?)|admin/";

  // Template, aus dem sich der Inhalt für die erzeugten .htpasswd-
  // Dateien in den entsprechenden Projekt-Verzeichnissen zusammensetzt.
  // $dir wird dabei später durch den Name des entsprechenden Projekt-Verzeichnisses
  // ersetzt.
  $htpasswd_template = "# automatically generated by technikum29 project administration\nRequire user \$dir admin\n";


  /**
   * Einzelne Teilroutinen sind ziemlich genau aus der ersten komplett
   * PHP-basierten Weiterleit-Engine übernommen
0   **/
  // htpasswd einlesen
  $passwd_file_content = file($passwd_file);
  if(!$passwd_file_content) {
      echo "Konnte Passwort-Datei nicht einlesen.";
      exit;
  }
  $registered_dirs = array();
  foreach($passwd_file_content as $line) {
     if($line{0} == '#') continue; // Kommentare
     if(($x = strpos($line, ':')) !== FALSE) {
         $registered_dirs[] = substr($line, 0, $x); // Nur Name kopieren, nicht pwd
     }
  }

  // Allgemeiner Übersichts-Aufruf.
  if(!isset($_GET['dir']) && empty($_POST)) {
?>

<p>Übersicht aller vorhandenen Projekt-Verzeichnisse <u>auf dem Server</u>: (<span style="background-color:green;">grün</span> = Passwortgeschützt, <span style="background-color:orange;">orange</span> = momentan für jeden Besucher lesbar)</p>

<div style="float:right; margin-left: 2em; border: 1px solid #aaa; padding: 1em;width:40%;">
    <h4>Welche Daten ausreichen, um zu einem Projekt zu kommen</h4>
    <p>Der Person, die auf das Projekt <em>beispiel</em> zugreifen soll,
       müssen folgende drei Dinge übermittelt werden:</p>
    <ol>
       <li>Die Adresse der Homepage, <i>www.technikum29.de</i>, wo
           auf die Projekte verlinkt ist</li>
       <li>Den <em>Namen des Projektes</em>, den er in der Liste
           anklickt.</li>
       <li>Ggf. das <em>Passwort</em>, welches für das Projekt
           gesetzt wurde.</li>
    </ol>
    <p>Beim Klick auf den Projektnamen erscheint dann ein Dialogfenster,
       wo der Besucher aufgefordert wird, die Benutzer/Passwort-
       Kombination einzutippen. Bei falschem Benutzer/Passwort erscheint
       eine Fehlernachricht.</p>
</div>

<table border>
<?php
    // Verzeichnisse durchgehen
    chdir($projekte_dir);
    if($handle = opendir('.')) {
        while(false !== ($dir = readdir($handle))) {
            if (preg_match($exclude_dirs, $dir) || !is_dir($dir)) continue;
            $has_pwd = in_array($dir, $registered_dirs);
            echo '<tr><th style="background-color:'.($has_pwd?'green':'orange')."\">$dir</th>\t<td><a href=\"${projekte_dir}${dir}\" target=\"_blank\">anschauen</a></td>\t<td><a href=\"?dir=$dir\" title=\"Passwort setzen/veraendern\">";
	    if($has_pwd) {
                echo "Passwort &auml;ndern";
            } else {
                echo "<b>Passwort f&uuml;r Verzeichnis einrichten...</b>";
            }
            echo "</a></td></tr>\n";
         }
         closedir($handle);
     }
?>
</table>

<p>Legende zur Benutzung der Tabelle: Durch einen Klick auf <i>anschauen</i>
werden die Projekt-Ordner in einem neuen Fenster geöffnet. Die Eingabe eines
Passwortes ist dabei nicht notwendig, da bereits als Administrator angemeldet.
Ein Klick auf <i>Passwort ändern</i> bzw. <i>Passwort für neues Verzeichnis
einrichten</i> ändert das Passwort, welches (nur) für dieses Verzeichnis
gültig ist. Das gesetzte Passwort kann später nicht mehr gelesen werden
(weil es verschlüsselt gespeichert wird).</p>

<h3>Leitfaden zum Anlegen neuer Projekte</h3>

<p>Die Projekte befinden sich im Unterordner <em>projekte</em> im Homepageverzeichnis.
Ein einzelnes Projekt entspricht dabei einem Verzeichnis in diesem Unterordner.
Neue Projekte erstellt man also, in dem man
ein neues Verzeichnis per Hand erzeugt. In diesem Verzeichnis kann man dann nach
ohne Beschränkung Dateien erstellen. Anschließend sollte das neue Projekt in der
HTML-Datei <a href="../index.php">index.php</a> in der Liste eingetragen werden.</p>

<p>In der (über FTP) runtergeladenen Version der Projekte ist der Passwortschutz
noch nicht vorhanden. <b>Erst nachdem der neue Projektordner</b> und die geänderte
<i>index.php</i>-Datei per FTP <b>hochgeladen wurden, kann in dieser
Administrationsoberfläche hier ein Passwort für das neue Projekt eingerichtet
werden</b>.</p>

<p>Bitte für die <b>Namen von Projekt-Verzeichnissen</b> beachten: Es wird ausdrücklich empfohlen, ausschließlich ein <u>einzelnes, kleingeschriebenes Wort</u> als Projekt/Verzeichnisname zu wählen! Punkte (<tt>.</tt>) und Doppelpunkte (<tt>:</tt>) sind zuzüglich zu den normalen Beschränkungen für Dateinamen nicht erlaubt.</p>

<?php
  } else if(isset($_GET['dir']) && empty($_POST)) {
      // Passwort aendern fuer Verzeichnis "dir"
      chdir($projekte_dir);
      $dir = $_GET['dir']; # $dir muss nicht auf sowas wie ../../passwd überprüft werden, weil
                           # hier nu rein Formular aufgesetzt wird
      if(!is_dir($dir)) {
          echo "Gewünschtes Verzeichnis <i>$dir</i> existiert nicht.";
          exit;
      }

      $is_new = in_array($dir, $registered_dirs);
      if($is_new) {
          echo "<h2>Passwortschutz für <i>$dir</i> einrichten</h2>\n";
          echo "<p>Im Folgenden kann ein Passwort festgelegt werden, welches nur für dieses Verzeichnis gelten wird.</p>\n";
      } else {
          echo "<h2>Neues Passwort für <i>$dir</i> setzen</h2>\n";
          echo "<p>Das alte Passwort wird dabei durch das neue ersetzt. Zugriffe mit dem alten Passwort sind nicht anschließend nicht mehr möglich. Das neue Passwort tritt umgehend in Kraft.</p>\n";
      }
      ?><form method="POST">
          <input type="hidden" name="dir" value="<?=$dir; ?>">
          <div class="label"> <!--for="source1">--><input type="radio" name="pwd_source" id="source1" value="auto" checked="checked"> Bitte automatisch ein Passwort mit
              <input type="input" name="auto_length" value="8"> Zeichen generieren.
	  </div>
          <p><u>oder</u></p>
          <div class="label"><!-- for="source2">-->
	  <input type="radio" name="pwd_source" id="source2" value="self"> Das folgende, selbst gewählte Passwort einstellen:
              <input type="password" name="own_pwd">
	  </div>

         <p><u>oder</u></p>
	 <label for="source3"><input type="radio" name="pwd_source" id="source3" value="delete"> Passwort für dieses Passwort löschen &ndash; jeder kann dann den Projektinhalt ohne Passwort erreichen!</label>

          <p><input type="submit" value="Passwort setzen"></p>
      </form>

      <p>Bitte folgende Hinweise beachten:</p>
      <ul>
         <li>Bei der Erzeugung eines automatischen Passwortes wird dies auf der folgenden Seite in großer
             Schrift angezeigt. Bitte abschreiben!</li>
         <li>Das Passwort wird in jedem Fall verschlüsselt gespeichert. Es handelt sich um eine Einwegverschlüsselung,
             sodass das Klartextpasswort anschließend nicht mehr herausgefunden werden kann!</li>
      </ul>
      <?php

  } else if(!empty($_POST)) {
      // Passwortformular ausgefüllt
      if(!($source = $_POST['pwd_source']) || !($dir = $_POST['dir'])) {
          echo "Formular fehlerhaft, Daten fehlen.\n";
          exit;
      }

      // dir gegen hijacking absichern (+ gegen "admin"-Passwort ueberschreiben)
      if(strpos($dir, '/') || $dir == "admin") {
          echo "Keine faulen Tricks.";
          exit;
      }

      // in diese Variable wird dann das Passwort gespeichert und anschließend gesetzt.
      $password = false; // wenn am Ende immer noch false, dann Löschen!
      if($source == 'delete') {
          // Passwortschutz (ggf.) löschen!
	  $password = false;
	  echo "<h2>Passwortschutz für <i>$dir</i> entfernt.</h2>";
	  echo '<p>Der Inhalt des Projektes kann jetzt von jedem im Internet gelesen werden!</p>';
      } else if($source == 'self') {
          // Gesendetes Passwort übernehmen
          $password = $_POST['own_pwd'];
          if(!$password) {
              echo "<h2>Fehler</h2><p>Und wo ist jetzt das gewünschte Passwort? Wohl vergessen einzutippen. Bitte zurückgehen und nachtragen.";
              exit;
          }
          echo "<h2>Passwort für <i>$dir</i> wurde gespeichert</h2>";
      } else if($source == 'auto') {
          // Passwort mit entsprechender Länge generieren
          if(!($auto_length = $_POST['auto_length'])) $auto_length = 8;
          if(!is_numeric($auto_length) || $auto_length <= 0) {
              echo "<h2>Fehler</h2><p>Gewünschte Passwortlänge <i>$auto_length</i> ist keine positive Ganzzahl größer Null (sowas wie 1, 2, 3, 4, ...). Bitte <a href=\"javascript:history.go()\">zurück gehen</a> und korrigieren.";
              exit;
          }
          $password = generate_password($auto_length);
          echo "<h2>Password für <i>$dir</i> generiert und gespeichert</h2>";
          echo "<p>Es wurde ein Passwort mit $auto_length Zeichen generiert. Bitte abschreiben, sonst ist es unwiderbringlich verloren!</p>";
          echo "<p>Das Passwort lautet:</p>";
          echo "<dir style=\"padding:3em;text-align:center;border:5px solid red;font-size:1.4em;font-family:monospace\">$password</dir>";
      }
      // noch so allgemeine Informationen
      if($password)
        echo '<p>Das neue Passwort gilt ab sofort, das ggf. vorher gesetzte alte Passwort wurde bereits mit dem neuen überschrieben und ist nicht mehr zurück zu gewinnen.</p>';
      else
        echo '<p>Der passwortlose Zugang gilt ab sofort, das ggf. vorher gesetzte alte Passwort wurde bereits gelöscht und ist nicht mehr zurück zu gewinnen.</p>';
      ?>
      <p><a href="<?=$_SERVER['PHP_SELF'];?>">Zurück zur Projektauflistungs-Übersicht</a></p>
      <hr>
      <h3>Ausführliche Ausgaben:</h3>
      <pre class="box"><?php

      // hier beginnt die wirkliche Arbeit.
      $htaccess_file_name = $projekte_dir.$dir.'/.htaccess';
      if(!is_file($htaccess_file_name) && $password) {
          $htpasswd_template = str_replace('$dir', $dir, $htpasswd_template);
          if(file_put_contents($htaccess_file_name, $htpasswd_template)) {
              echo "* $htaccess_file_name geschrieben mit folgendem Inhalt:\n";
              echo $htpasswd_template;
              echo "-- Ende htaccess ---\n";
          }
      } else if(is_file($htaccess_file_name) && !$password) {
         // Passwort löschen - htaccess löschen
         if(unlink($htaccess_file_name))
	     echo "* $htaccess_file_name erfolgreich gelöscht\n";
	 else
	     echo "* <b>Fehler: $htaccess_file_name konnte nicht gelöscht werden!</b>\n";
      } else if(!$password) {
          echo "* $htacces_file_name existierte noch gar nicht - nichts gelöscht\n";
      } else if($password) {
          echo "* $htaccess_file_name existiert bereits seit ".date("r", filemtime($htaccess_file_name))."\n";
     } else echo "* <b>Böser Fehler mit der htaccess-Datei $htaccess_file_name, Passwort= $password</b>\n";

      // htpasswd aufrufen
      echo "* Rufe $htpasswd auf, um $passwd_file zu aktualisieren. Ausgaben:\n";
      
      $dir = escapeshellarg($dir);
      $command = "$htpasswd -b".($password?'':'D')." $passwd_file $dir " .
          ($password ? escapeshellarg($password) : 'dummytext') . // htpasswds komischer Syntax
	  ' 2>&1';
      system($command, $return_value);
      if($return_value) echo "<b>*** Offensichtlich ist Fehler $return_value aufgetreten! *** </b>\nDas Kommando war:\n$command\n";
      else echo "* htpasswd-Programm offensichtlich ohne Probleme gelaufen.\n";

      ?>* Fertig</pre>
      <p>Im Falle eines Fehlers sind diese Ausgaben für eine Fehlerbetrachtung zwingend notwendig.</p>
      <?php
  } // end main if

  // Hilfsfunktionen
  function generate_password($length) {
      // irgendein Algorithmus, findet man per Suchmaschine.
      $range = array_merge(range('0','9'), range('a','z'), range('A','Z'), array('.','_','+'));
      mt_srand((double)microtime()*1000000);
      for ($i = 1; $i <= (count($range)*2); $i++)  {
          $swap = mt_rand(0, count($range)-1);
          $tmp = $range[$swap];
          $range[$swap] = $range[0];
          $range[0] = $tmp;
      }

      return substr(implode('',$range),0,$length);
  }
?>
